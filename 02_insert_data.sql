INSERT INTO Books (title)
VALUES
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('Building Microservices'),
  ('The Mythical Man-Month'),
  ('Continuous Delivery'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Introduction to Algorithms'),
  ('Head First Design Patterns'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('The Complete Software Developer’s Career Guide'),
  ('You Don’t Know JS'),
  ('You Don’t Know JS'),
  ('The Art of Unix Programming'),
  ('JavaScript: The Definitive Guide'),
  ('Agile Estimating and Planning'),
  ('The Software Craftsman'),
  ('Effective Java'),
  ('The Pragmatic Programmer'),
  ('Mastering Python'),
  ('The Mythical Man-Month'),
  ('Programming Pearls'),
  ('The Software Craftsman'),
  ('Building Microservices'),
  ('Test-Driven Development'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Code Complete'),
  ('The Software Craftsman'),
  ('Head First Design Patterns'),
  ('The Pragmatic Programmer'),
  ('Patterns of Enterprise Application Architecture'),
  ('Cracking the Coding Interview'),
  ('Code Complete'),
  ('The Complete Software Developer’s Career Guide'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('Designing Data-Intensive Applications'),
  ('Cracking the Coding Interview'),
  ('Continuous Delivery'),
  ('The Art of Unix Programming'),
  ('The Mythical Man-Month'),
  ('Mastering Python'),
  ('Building Microservices'),
  ('Functional Programming in Scala'),
  ('The C Programming Language'),
  ('Code Complete'),
  ('Effective Java'),
  ('The DevOps Handbook'),
  ('Python Crash Course'),
  ('Python Crash Course'),
  ('Design Patterns in Ruby'),
  ('Learning SQL'),
  ('Head First Design Patterns'),
  ('Designing Data-Intensive Applications'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Structure and Interpretation of Computer Programs'),
  ('Continuous Delivery'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Python Crash Course'),
  ('Mastering Python'),
  ('Python Crash Course'),
  ('Refactoring to Patterns'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The DevOps Handbook'),
  ('Effective Java'),
  ('JavaScript: The Definitive Guide'),
  ('The Mythical Man-Month'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Pragmatic Programmer'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Patterns of Enterprise Application Architecture'),
  ('The Mythical Man-Month'),
  ('Python Crash Course'),
  ('Designing Data-Intensive Applications'),
  ('JavaScript: The Good Parts'),
  ('Refactoring to Patterns'),
  ('Learning SQL'),
  ('The DevOps Handbook'),
  ('The DevOps Handbook'),
  ('The Clean Coder'),
  ('JavaScript: The Definitive Guide'),
  ('Test-Driven Development'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Python Crash Course'),
  ('Design Patterns in Ruby'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Complete Software Developer’s Career Guide'),
  ('Introduction to Algorithms'),
  ('Refactoring to Patterns'),
  ('Java Performance: The Definitive Guide'),
  ('Clean Code'),
  ('The Art of Software Testing'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Designing Data-Intensive Applications'),
  ('Database Design for Mere Mortals'),
  ('Database Design for Mere Mortals'),
  ('Design Patterns in Ruby'),
  ('Mastering Python'),
  ('The C Programming Language'),
  ('Python Crash Course'),
  ('Mastering Python'),
  ('The Software Craftsman'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Spring in Action'),
  ('Cracking the Coding Interview'),
  ('Design Patterns in Ruby'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Continuous Delivery'),
  ('The Art of Computer Programming'),
  ('Head First Design Patterns'),
  ('You Don’t Know JS'),
  ('The DevOps Handbook'),
  ('Head First Design Patterns'),
  ('Code Complete'),
  ('JavaScript: The Good Parts'),
  ('The Mythical Man-Month'),
  ('The Art of Unix Programming'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('The Complete Software Developer’s Career Guide'),
  ('The Art of Unix Programming'),
  ('The Clean Coder'),
  ('Java Performance: The Definitive Guide'),
  ('You Don’t Know JS'),
  ('Introduction to Algorithms'),
  ('Functional Programming in Scala'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Designing Data-Intensive Applications'),
  ('Programming Pearls'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('JavaScript: The Good Parts'),
  ('The Mythical Man-Month'),
  ('Programming Pearls'),
  ('Learning SQL'),
  ('The Software Craftsman'),
  ('Building Microservices'),
  ('The Art of Unix Programming'),
  ('Spring in Action'),
  ('Java Performance: The Definitive Guide'),
  ('Introduction to Algorithms'),
  ('Functional Programming in Scala'),
  ('Spring in Action'),
  ('Structure and Interpretation of Computer Programs'),
  ('Structure and Interpretation of Computer Programs'),
  ('Test-Driven Development'),
  ('Designing Data-Intensive Applications'),
  ('Effective Java'),
  ('Head First Design Patterns'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('The Art of Computer Programming'),
  ('The DevOps Handbook'),
  ('JavaScript: The Definitive Guide'),
  ('The Clean Coder'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Patterns of Enterprise Application Architecture'),
  ('Python Crash Course'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Test-Driven Development'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('JavaScript: The Good Parts'),
  ('You Don’t Know JS'),
  ('The Art of Software Testing'),
  ('The Pragmatic Programmer'),
  ('Test-Driven Development'),
  ('You Don’t Know JS'),
  ('Design Patterns in Ruby'),
  ('Mastering Python'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Functional Programming in Scala'),
  ('Building Microservices'),
  ('Spring in Action'),
  ('Designing Data-Intensive Applications'),
  ('Code Complete'),
  ('Introduction to Algorithms'),
  ('Agile Estimating and Planning'),
  ('Effective Java'),
  ('JavaScript: The Good Parts'),
  ('Building Microservices'),
  ('Effective Java'),
  ('Functional Programming in Scala'),
  ('Building Microservices'),
  ('The Art of Unix Programming'),
  ('The Pragmatic Programmer'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Continuous Delivery'),
  ('Java Performance: The Definitive Guide'),
  ('Mastering Python'),
  ('Code Complete'),
  ('Refactoring to Patterns'),
  ('Test-Driven Development'),
  ('The C Programming Language'),
  ('Structure and Interpretation of Computer Programs'),
  ('Patterns of Enterprise Application Architecture'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('The Pragmatic Programmer'),
  ('The Art of Computer Programming'),
  ('Structure and Interpretation of Computer Programs'),
  ('Learning SQL'),
  ('The Pragmatic Programmer'),
  ('JavaScript: The Definitive Guide'),
  ('JavaScript: The Good Parts'),
  ('Introduction to Algorithms'),
  ('Programming Pearls'),
  ('The C Programming Language'),
  ('Database Design for Mere Mortals'),
  ('JavaScript: The Good Parts'),
  ('Spring in Action'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('The DevOps Handbook'),
  ('Agile Estimating and Planning'),
  ('The Software Craftsman'),
  ('The Art of Computer Programming'),
  ('Cracking the Coding Interview'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Introduction to Algorithms'),
  ('Database Design for Mere Mortals'),
  ('Design Patterns in Ruby'),
  ('The Pragmatic Programmer'),
  ('Structure and Interpretation of Computer Programs'),
  ('Continuous Delivery'),
  ('Structure and Interpretation of Computer Programs'),
  ('Database Design for Mere Mortals'),
  ('The Pragmatic Programmer'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Complete Software Developer’s Career Guide'),
  ('Cracking the Coding Interview'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Complete Software Developer’s Career Guide'),
  ('Functional Programming in Scala'),
  ('Patterns of Enterprise Application Architecture'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Pragmatic Programmer'),
  ('Functional Programming in Scala'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Java Performance: The Definitive Guide'),
  ('The C Programming Language'),
  ('The Software Craftsman'),
  ('The C Programming Language'),
  ('The Software Craftsman'),
  ('JavaScript: The Good Parts'),
  ('The Mythical Man-Month'),
  ('Patterns of Enterprise Application Architecture'),
  ('Spring in Action'),
  ('The DevOps Handbook'),
  ('Refactoring to Patterns'),
  ('The Complete Software Developer’s Career Guide'),
  ('Database Design for Mere Mortals'),
  ('Java Performance: The Definitive Guide'),
  ('Introduction to Algorithms'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Programming Pearls'),
  ('The Art of Unix Programming'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Database Design for Mere Mortals'),
  ('Head First Design Patterns'),
  ('The DevOps Handbook'),
  ('Learning SQL'),
  ('You Don’t Know JS'),
  ('JavaScript: The Definitive Guide'),
  ('Code Complete'),
  ('Learning SQL'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Art of Unix Programming'),
  ('The Art of Computer Programming'),
  ('The Pragmatic Programmer'),
  ('Python Crash Course'),
  ('The Complete Software Developer’s Career Guide'),
  ('Continuous Delivery'),
  ('The Software Craftsman'),
  ('Continuous Delivery'),
  ('The Mythical Man-Month'),
  ('Refactoring to Patterns'),
  ('The C Programming Language'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Head First Design Patterns'),
  ('Code Complete'),
  ('Python Crash Course'),
  ('Building Microservices'),
  ('Building Microservices'),
  ('The Clean Coder'),
  ('The Pragmatic Programmer'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Complete Software Developer’s Career Guide'),
  ('Test-Driven Development'),
  ('Spring in Action'),
  ('Code Complete'),
  ('Continuous Delivery'),
  ('Effective Java'),
  ('Learning SQL'),
  ('The Mythical Man-Month'),
  ('Design Patterns in Ruby'),
  ('Test-Driven Development'),
  ('The Art of Computer Programming'),
  ('Head First Design Patterns'),
  ('Patterns of Enterprise Application Architecture'),
  ('Python Crash Course'),
  ('Effective Java'),
  ('Designing Data-Intensive Applications'),
  ('Functional Programming in Scala'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('JavaScript: The Good Parts'),
  ('The Pragmatic Programmer'),
  ('Continuous Delivery'),
  ('Effective Java'),
  ('Introduction to Algorithms'),
  ('Clean Code'),
  ('The Art of Unix Programming'),
  ('Programming Pearls'),
  ('Python Crash Course'),
  ('Continuous Delivery'),
  ('Mastering Python'),
  ('The Clean Coder'),
  ('Learning SQL'),
  ('Programming Pearls'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('The Pragmatic Programmer'),
  ('The Pragmatic Programmer'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Java Performance: The Definitive Guide'),
  ('Programming Pearls'),
  ('Programming Pearls'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Head First Design Patterns'),
  ('Refactoring to Patterns'),
  ('The Complete Software Developer’s Career Guide'),
  ('Continuous Delivery'),
  ('The Software Craftsman'),
  ('Programming Pearls'),
  ('Database Design for Mere Mortals'),
  ('Effective Java'),
  ('The C Programming Language'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Designing Data-Intensive Applications'),
  ('The Pragmatic Programmer'),
  ('The Art of Software Testing'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Agile Estimating and Planning'),
  ('JavaScript: The Good Parts'),
  ('The C Programming Language'),
  ('The Art of Unix Programming'),
  ('Effective Java'),
  ('The DevOps Handbook'),
  ('JavaScript: The Definitive Guide'),
  ('The Complete Software Developer’s Career Guide'),
  ('Cracking the Coding Interview'),
  ('The C Programming Language'),
  ('JavaScript: The Good Parts'),
  ('Java Performance: The Definitive Guide'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('JavaScript: The Good Parts'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Building Microservices'),
  ('The Art of Unix Programming'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('You Don’t Know JS'),
  ('Cracking the Coding Interview'),
  ('Designing Data-Intensive Applications'),
  ('Design Patterns in Ruby'),
  ('Functional Programming in Scala'),
  ('The C Programming Language'),
  ('The Complete Software Developer’s Career Guide'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('You Don’t Know JS'),
  ('The Art of Computer Programming'),
  ('Python Crash Course'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('The Pragmatic Programmer'),
  ('Java Performance: The Definitive Guide'),
  ('Structure and Interpretation of Computer Programs'),
  ('Structure and Interpretation of Computer Programs'),
  ('Patterns of Enterprise Application Architecture'),
  ('JavaScript: The Good Parts'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('JavaScript: The Good Parts'),
  ('The Clean Coder'),
  ('The C Programming Language'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('Python Crash Course'),
  ('Programming Pearls'),
  ('Design Patterns in Ruby'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Design Patterns in Ruby'),
  ('The Mythical Man-Month'),
  ('Refactoring to Patterns'),
  ('Design Patterns in Ruby'),
  ('Design Patterns in Ruby'),
  ('The Clean Coder'),
  ('The Software Craftsman'),
  ('Code Complete'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Learning SQL'),
  ('Effective Java'),
  ('JavaScript: The Good Parts'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Learning SQL'),
  ('The C Programming Language'),
  ('The Mythical Man-Month'),
  ('Functional Programming in Scala'),
  ('JavaScript: The Definitive Guide'),
  ('Cracking the Coding Interview'),
  ('The Complete Software Developer’s Career Guide'),
  ('The DevOps Handbook'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Cracking the Coding Interview'),
  ('Mastering Python'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('The Art of Unix Programming'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Test-Driven Development'),
  ('Programming Pearls'),
  ('JavaScript: The Definitive Guide'),
  ('The DevOps Handbook'),
  ('Java Performance: The Definitive Guide'),
  ('Agile Estimating and Planning'),
  ('The C Programming Language'),
  ('JavaScript: The Definitive Guide'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Clean Coder'),
  ('The Art of Unix Programming'),
  ('Patterns of Enterprise Application Architecture'),
  ('Patterns of Enterprise Application Architecture'),
  ('The Complete Software Developer’s Career Guide'),
  ('Mastering Python'),
  ('Code Complete'),
  ('Learning SQL'),
  ('Structure and Interpretation of Computer Programs'),
  ('Structure and Interpretation of Computer Programs'),
  ('Database Design for Mere Mortals'),
  ('Design Patterns in Ruby'),
  ('Refactoring to Patterns'),
  ('Spring in Action'),
  ('The DevOps Handbook'),
  ('Agile Estimating and Planning'),
  ('Head First Design Patterns'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Structure and Interpretation of Computer Programs'),
  ('Programming Pearls'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Patterns of Enterprise Application Architecture'),
  ('Structure and Interpretation of Computer Programs'),
  ('The C Programming Language'),
  ('Designing Data-Intensive Applications'),
  ('Mastering Python'),
  ('The Mythical Man-Month'),
  ('Designing Data-Intensive Applications'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('The Complete Software Developer’s Career Guide'),
  ('Design Patterns in Ruby'),
  ('Spring in Action'),
  ('Database Design for Mere Mortals'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Art of Unix Programming'),
  ('Java Performance: The Definitive Guide'),
  ('Database Design for Mere Mortals'),
  ('The C Programming Language'),
  ('Code Complete'),
  ('Patterns of Enterprise Application Architecture'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Cracking the Coding Interview'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Test-Driven Development'),
  ('Clean Code'),
  ('Design Patterns in Ruby'),
  ('Functional Programming in Scala'),
  ('The Software Craftsman'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Design Patterns in Ruby'),
  ('Introduction to Algorithms'),
  ('Java Performance: The Definitive Guide'),
  ('Learning SQL'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('The Art of Computer Programming'),
  ('The Pragmatic Programmer'),
  ('Python Crash Course'),
  ('Test-Driven Development'),
  ('Continuous Delivery'),
  ('The Art of Computer Programming'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Test-Driven Development'),
  ('Test-Driven Development'),
  ('Structure and Interpretation of Computer Programs'),
  ('Building Microservices'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Python Crash Course'),
  ('The Art of Software Testing'),
  ('The Art of Unix Programming'),
  ('Programming Pearls'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Structure and Interpretation of Computer Programs'),
  ('Structure and Interpretation of Computer Programs'),
  ('Python Crash Course'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Complete Software Developer’s Career Guide'),
  ('Test-Driven Development'),
  ('The Clean Coder'),
  ('Mastering Python'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Clean Coder'),
  ('Design Patterns in Ruby'),
  ('JavaScript: The Definitive Guide'),
  ('Building Microservices'),
  ('Learning SQL'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('JavaScript: The Definitive Guide'),
  ('The Clean Coder'),
  ('Code Complete'),
  ('Effective Java'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Clean Coder'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('The Pragmatic Programmer'),
  ('Design Patterns in Ruby'),
  ('The C Programming Language'),
  ('Designing Data-Intensive Applications'),
  ('The Software Craftsman'),
  ('Designing Data-Intensive Applications'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Mastering Python'),
  ('Building Microservices'),
  ('Learning SQL'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Cracking the Coding Interview'),
  ('Mastering Python'),
  ('The Pragmatic Programmer'),
  ('The Mythical Man-Month'),
  ('The Art of Unix Programming'),
  ('Database Design for Mere Mortals'),
  ('The Art of Computer Programming'),
  ('Java Performance: The Definitive Guide'),
  ('The Complete Software Developer’s Career Guide'),
  ('Continuous Delivery'),
  ('JavaScript: The Good Parts'),
  ('Spring in Action'),
  ('Building Microservices'),
  ('Continuous Delivery'),
  ('The Pragmatic Programmer'),
  ('Effective Java'),
  ('Clean Code'),
  ('Structure and Interpretation of Computer Programs'),
  ('Learning SQL'),
  ('The Clean Coder'),
  ('Spring in Action'),
  ('The Mythical Man-Month'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Code Complete'),
  ('Clean Code'),
  ('Patterns of Enterprise Application Architecture'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('The Clean Coder'),
  ('The Art of Unix Programming'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Software Craftsman'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('The Mythical Man-Month'),
  ('Spring in Action'),
  ('The DevOps Handbook'),
  ('Design Patterns in Ruby'),
  ('The DevOps Handbook'),
  ('Learning SQL'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Pragmatic Programmer'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Clean Code'),
  ('The Art of Computer Programming'),
  ('The Clean Coder'),
  ('Building Microservices'),
  ('The Clean Coder'),
  ('Python Crash Course'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Clean Code'),
  ('Design Patterns in Ruby'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Structure and Interpretation of Computer Programs'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Learning SQL'),
  ('Programming Pearls'),
  ('Spring in Action'),
  ('The DevOps Handbook'),
  ('Python Crash Course'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('Code Complete'),
  ('Programming Pearls'),
  ('Design Patterns in Ruby'),
  ('Patterns of Enterprise Application Architecture'),
  ('The Mythical Man-Month'),
  ('Head First Design Patterns'),
  ('The Mythical Man-Month'),
  ('Java Performance: The Definitive Guide'),
  ('Cracking the Coding Interview'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('You Don’t Know JS'),
  ('Designing Data-Intensive Applications'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code Complete'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code Complete'),
  ('Designing Data-Intensive Applications'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('You Don’t Know JS'),
  ('Patterns of Enterprise Application Architecture'),
  ('The Clean Coder'),
  ('Structure and Interpretation of Computer Programs'),
  ('Designing Data-Intensive Applications'),
  ('The Art of Computer Programming'),
  ('Effective Java'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('Building Microservices'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('The Pragmatic Programmer'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('You Don’t Know JS'),
  ('Mastering Python'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Patterns of Enterprise Application Architecture'),
  ('The Clean Coder'),
  ('The Pragmatic Programmer'),
  ('The Art of Unix Programming'),
  ('Test-Driven Development'),
  ('Designing Data-Intensive Applications'),
  ('Design Patterns in Ruby'),
  ('The DevOps Handbook'),
  ('Java Performance: The Definitive Guide'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Test-Driven Development'),
  ('Programming Pearls'),
  ('Functional Programming in Scala'),
  ('Refactoring to Patterns'),
  ('Structure and Interpretation of Computer Programs'),
  ('Python Crash Course'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Design Patterns in Ruby'),
  ('The DevOps Handbook'),
  ('Cracking the Coding Interview'),
  ('Refactoring to Patterns'),
  ('The Mythical Man-Month'),
  ('Mastering Python'),
  ('Refactoring to Patterns'),
  ('The DevOps Handbook'),
  ('Test-Driven Development'),
  ('The Art of Unix Programming'),
  ('Introduction to Algorithms'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Art of Unix Programming'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Art of Computer Programming'),
  ('Mastering Python'),
  ('Mastering Python'),
  ('Structure and Interpretation of Computer Programs'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('The Pragmatic Programmer'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Programming Pearls'),
  ('Design Patterns in Ruby'),
  ('Python Crash Course'),
  ('Cracking the Coding Interview'),
  ('Design Patterns in Ruby'),
  ('Mastering Python'),
  ('Test-Driven Development'),
  ('Patterns of Enterprise Application Architecture'),
  ('The C Programming Language'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('The Pragmatic Programmer'),
  ('Designing Data-Intensive Applications'),
  ('Learning SQL'),
  ('The Clean Coder'),
  ('Python Crash Course'),
  ('Building Microservices'),
  ('Designing Data-Intensive Applications'),
  ('Programming Pearls'),
  ('Java Performance: The Definitive Guide'),
  ('Database Design for Mere Mortals'),
  ('The DevOps Handbook'),
  ('Test-Driven Development'),
  ('Mastering Python'),
  ('Test-Driven Development'),
  ('Agile Estimating and Planning'),
  ('The Art of Software Testing'),
  ('You Don’t Know JS'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Building Microservices'),
  ('Agile Estimating and Planning'),
  ('Python Crash Course'),
  ('The Clean Coder'),
  ('Test-Driven Development'),
  ('Java Performance: The Definitive Guide'),
  ('Functional Programming in Scala'),
  ('Agile Estimating and Planning'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('The Pragmatic Programmer'),
  ('Clean Code'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('The Mythical Man-Month'),
  ('Spring in Action'),
  ('The DevOps Handbook'),
  ('Cracking the Coding Interview'),
  ('Spring in Action'),
  ('Functional Programming in Scala'),
  ('Code Complete'),
  ('Effective Java'),
  ('Designing Data-Intensive Applications'),
  ('Agile Estimating and Planning'),
  ('Patterns of Enterprise Application Architecture'),
  ('Programming Pearls'),
  ('The Pragmatic Programmer'),
  ('Database Design for Mere Mortals'),
  ('The C Programming Language'),
  ('Agile Estimating and Planning'),
  ('Continuous Delivery'),
  ('Structure and Interpretation of Computer Programs'),
  ('The C Programming Language'),
  ('Refactoring to Patterns'),
  ('Code: The Hidden Language of Computer Hardware and Software'),
  ('JavaScript: The Good Parts'),
  ('Learning SQL'),
  ('Clean Code'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code Complete'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Learning SQL'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Structure and Interpretation of Computer Programs'),
  ('Database Design for Mere Mortals'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Cracking the Coding Interview'),
  ('Introduction to Algorithms'),
  ('Python Crash Course'),
  ('The Art of Unix Programming'),
  ('JavaScript: The Definitive Guide'),
  ('Code Complete'),
  ('Spring in Action'),
  ('Cracking the Coding Interview'),
  ('Design Patterns in Ruby'),
  ('JavaScript: The Good Parts'),
  ('Spring in Action'),
  ('The Art of Unix Programming'),
  ('Introduction to Algorithms'),
  ('Functional Programming in Scala'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Art of Computer Programming'),
  ('You Don’t Know JS'),
  ('The Art of Software Testing'),
  ('JavaScript: The Good Parts'),
  ('The Art of Unix Programming'),
  ('JavaScript: The Definitive Guide'),
  ('Structure and Interpretation of Computer Programs'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Code Complete'),
  ('The Mythical Man-Month'),
  ('Patterns of Enterprise Application Architecture'),
  ('JavaScript: The Definitive Guide'),
  ('The Art of Software Testing'),
  ('Spring in Action'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Complete Software Developer’s Career Guide'),
  ('Test-Driven Development'),
  ('Code Complete'),
  ('Effective Java'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Agile Estimating and Planning'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Patterns of Enterprise Application Architecture'),
  ('Cracking the Coding Interview'),
  ('Database Design for Mere Mortals'),
  ('Code Complete'),
  ('Spring in Action'),
  ('The Art of Computer Programming'),
  ('The Software Craftsman'),
  ('Building Microservices'),
  ('Continuous Delivery'),
  ('Refactoring to Patterns'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Software Craftsman'),
  ('Continuous Delivery'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('JavaScript: The Definitive Guide'),
  ('Continuous Delivery'),
  ('Mastering Python'),
  ('Programming Pearls'),
  ('Introduction to Algorithms'),
  ('The Pragmatic Programmer'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Test-Driven Development'),
  ('The Clean Coder'),
  ('Functional Programming in Scala'),
  ('The Pragmatic Programmer'),
  ('The Complete Software Developer’s Career Guide'),
  ('Introduction to Algorithms'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('You Don’t Know JS'),
  ('Structure and Interpretation of Computer Programs'),
  ('Cracking the Coding Interview'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Effective Java'),
  ('Learning SQL'),
  ('Patterns of Enterprise Application Architecture'),
  ('The Art of Unix Programming'),
  ('The Pragmatic Programmer'),
  ('The Clean Coder'),
  ('Head First Design Patterns'),
  ('Spring in Action'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('Database Design for Mere Mortals'),
  ('Introduction to Algorithms'),
  ('The Art of Unix Programming'),
  ('Structure and Interpretation of Computer Programs'),
  ('Agile Estimating and Planning'),
  ('Clean Code'),
  ('The Art of Computer Programming'),
  ('The Art of Computer Programming'),
  ('Learning SQL'),
  ('The Art of Computer Programming'),
  ('Patterns of Enterprise Application Architecture'),
  ('Building Microservices'),
  ('Designing Data-Intensive Applications'),
  ('Designing Data-Intensive Applications'),
  ('Spring in Action'),
  ('The Mythical Man-Month'),
  ('Code Complete'),
  ('The Art of Unix Programming'),
  ('Cracking the Coding Interview'),
  ('Designing Data-Intensive Applications'),
  ('JavaScript: The Good Parts'),
  ('Spring in Action'),
  ('Clean Code'),
  ('Functional Programming in Scala'),
  ('The Art of Software Testing'),
  ('Learning SQL'),
  ('Building Microservices'),
  ('Functional Programming in Scala'),
  ('Programming Pearls'),
  ('Agile Estimating and Planning'),
  ('The Art of Software Testing'),
  ('The Art of Software Testing'),
  ('Programming Pearls'),
  ('Effective Java'),
  ('JavaScript: The Good Parts'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Agile Estimating and Planning'),
  ('Python Crash Course'),
  ('Effective Java'),
  ('The C Programming Language'),
  ('The Software Craftsman'),
  ('The Art of Computer Programming'),
  ('Programming Pearls'),
  ('Code Complete'),
  ('Structure and Interpretation of Computer Programs'),
  ('Refactoring to Patterns'),
  ('Introduction to Algorithms'),
  ('The Complete Software Developer’s Career Guide'),
  ('JavaScript: The Definitive Guide'),
  ('Design Patterns in Ruby'),
  ('You Don’t Know JS'),
  ('Clean Code'),
  ('The DevOps Handbook'),
  ('The C Programming Language'),
  ('The Pragmatic Programmer'),
  ('Learning SQL'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Code Complete'),
  ('JavaScript: The Definitive Guide'),
  ('Building Microservices'),
  ('Functional Programming in Scala'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Continuous Delivery'),
  ('The Complete Software Developer’s Career Guide'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Code Complete'),
  ('Design Patterns in Ruby'),
  ('The Clean Coder'),
  ('You Don’t Know JS'),
  ('JavaScript: The Definitive Guide'),
  ('Refactoring to Patterns'),
  ('Design Patterns in Ruby'),
  ('Agile Estimating and Planning'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Database Design for Mere Mortals'),
  ('Design Patterns in Ruby'),
  ('The Mythical Man-Month'),
  ('Mastering Python'),
  ('Agile Estimating and Planning'),
  ('Head First Design Patterns'),
  ('Functional Programming in Scala'),
  ('Learning SQL'),
  ('Patterns of Enterprise Application Architecture'),
  ('Agile Estimating and Planning'),
  ('Mastering Python'),
  ('Head First Design Patterns'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Pragmatic Programmer'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Java Performance: The Definitive Guide'),
  ('The Art of Software Testing'),
  ('Structure and Interpretation of Computer Programs'),
  ('The Pragmatic Programmer'),
  ('Continuous Delivery'),
  ('The Art of Unix Programming'),
  ('Continuous Delivery'),
  ('Structure and Interpretation of Computer Programs'),
  ('JavaScript: The Definitive Guide'),
  ('Introduction to Algorithms'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('JavaScript: The Good Parts'),
  ('Introduction to Algorithms'),
  ('The Pragmatic Programmer'),
  ('You Don’t Know JS'),
  ('Continuous Delivery'),
  ('Effective Java'),
  ('The Art of Computer Programming'),
  ('The Art of Software Testing'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('The Art of Unix Programming'),
  ('The DevOps Handbook'),
  ('JavaScript: The Definitive Guide'),
  ('Head First Design Patterns'),
  ('The Pragmatic Programmer'),
  ('Structure and Interpretation of Computer Programs'),
  ('Python Crash Course'),
  ('The Art of Software Testing'),
  ('Code Simplicity: The Fundamentals of Software'),
  ('Programming Pearls'),
  ('Head First Design Patterns'),
  ('Refactoring: Improving the Design of Existing Code'),
  ('JavaScript: The Good Parts'),
  ('Code Complete'),
  ('The Complete Software Developer’s Career Guide'),
  ('The Software Craftsman'),
  ('The Pragmatic Programmer'),
  ('Agile Estimating and Planning'),
  ('The Art of Software Testing'),
  ('The C Programming Language'),
  ('Learning SQL'),
  ('You Don’t Know JS'),
  ('The Art of Software Testing'),
  ('Building Microservices'),
  ('Domain-Driven Design: Tackling Complexity in the Heart of Software'),
  ('Functional Programming in Scala'),
  ('The Pragmatic Programmer'),
  ('The Art of Software Testing'),
  ('Code Complete'),
  ('Design Patterns in Ruby'),
  ('Mastering Python'),
  ('Code Complete'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Spring in Action'),
  ('Design Patterns: Elements of Reusable Object-Oriented Software'),
  ('The Mythical Man-Month'),
  ('Spring in Action'),
  ('Effective Java'),
  ('Designing Data-Intensive Applications'),
  ('The Pragmatic Programmer'),
  ('Test-Driven Development'),
  ('The Pragmatic Programmer'),
  ('The Pragmatic Programmer'),
  ('Agile Estimating and Planning'),
  ('Structure and Interpretation of Computer Programs'),
  ('The C Programming Language'),
  ('Programming Pearls'),
  ('Python Crash Course'),
  ('Soft Skills: The Software Developer’s Life Manual'),
  ('Structure and Interpretation of Computer Programs'),
  ('The C Programming Language'),
  ('Building Microservices'),
  ('Database Design for Mere Mortals'),
  ('Spring in Action'),
  ('JavaScript: The Definitive Guide'),
  ('Database Design for Mere Mortals'),
  ('The Clean Coder'),
  ('You Don’t Know JS'),
  ('The DevOps Handbook'),
  ('Python Crash Course'),
  ('The Pragmatic Programmer'),
  ('The Clean Coder: A Code of Conduct for Professional Programmers'),
  ('Building Microservices');
